%% lyx 2.1.0svn created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass{article}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\usepackage{amssymb}
\usepackage{amsmath}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview={XYZ null null 1}}
%\usepackage{breakurl}

\makeatletter
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\renewcommand{\textfraction}{0.05}
\renewcommand{\topfraction}{0.8}
\renewcommand{\bottomfraction}{0.8}
\renewcommand{\floatpagefraction}{0.75}

\makeatother

\begin{document}

%% still can't get paths to work ...
% \SweaveOpts{path=fig/hw3-,fig.align=center,fig.show=hold,dev=png,width=6,height=4}

<<setup,echo=FALSE,results=hide,message=FALSE>>=
options(replace.assign=TRUE,width=90)
knit_hooks$set(par=function(before, options, envir){if (before) par(mar=c(4,4,.1,.1),cex.lab=.95,cex.axis=.9,mgp=c(2,.7,0),tcl=-.3,las=1)})
require(bbmle)
require(rethinking)
require(ggplot2)
@

\begin{center}
  {\bf \Large Homework 4, Statistical Rethinking}\\
\vspace{12pt}
   {\large Jaime Ashander}
\end{center}

We are working with data on urban foxes

<<load,message=FALSE,cache=TRUE>>=
d <- read.csv('foxes.csv')
d$ID <- d$group
d$group <- NULL
head(d,n=1)
@ 

There are five columns: 
\begin{enumerate}
  \item {\tt ID}: ID Number of the social group the individual fox (renamed from {\tt group}
  \item {\tt avgfood}: average amount of food available {\em in the territory}. 
  \item {\tt groupsize}: number of foxes in the social group. 
  \item {\tt area}: size of the territory. 
  \item {\tt weight}: body weight of the individual fox.
\end{enumerate}

<<pair-glance,cache=TRUE>>=
cor(d)
@ 

A glance at the correlation matrix hints that we could be on the look out with problems from correlated predictors.
The tightly corrrelated set of predictors ({\tt avgfood, groupsize, area}) are just on the boundary of correlations where we begin to expect problems ($\approx 90$), so things may work out.

\subsection*{Problem 1}
\label{problem1}

Denoting body weight as $w_i$, territory size $a_i$ (for area), and group size $g_i$, we fit two models: 

(1) modelling body weight as a normal random variable based on area
\[
\begin{split}
w_i \sim {\rm Normal} (\mu_i, \sigma)\\
\mu_i  = \alpha_a + \beta_a a_i
\end{split}
\]


<<weight-area,cache=TRUE,warning=FALSE>>=
wa.mle <- mle2(weight~dnorm(mean=alpha + b.a*area, sd=sigma), data=d, start=list(alpha=mean(d$weight), b.a=0, sigma=sd(d$weight)))
post <-sample.naive.posterior(wa.mle)
area.rng <- seq(min(d$area), max(d$area), len=1000)
mu.ci.wa <- sapply(area.rng, function(x){
  HPDI(post$alpha + post$b.a*x)})

plot(weight~area, data=d, col=col.alpha('darkgray', 0.8))
abline(reg=wa.mle)
lines(mu.ci.wa['lower',]~area.rng, data=d, lty=2)
lines(mu.ci.wa['upper',]~area.rng, data=d, lty=2)
precis(wa.mle)
@ 


(2) modelling body weight as a normal random variable based on group size
\[
\begin{split}
w_i \sim {\rm Normal} (\mu_i, \sigma)\\
\mu_i  = \alpha_g + \beta_g g_i
\end{split}
\]

<<weight-groupsize,cache=TRUE,warning=FALSE>>=
wg.mle <- mle2(weight~dnorm(mean=alpha + b.g*groupsize, sd=sigma), data=d, start=list(alpha=mean(d$weight), b.g=0, sigma=sd(d$weight)))
post <-sample.naive.posterior(wg.mle)
groupsize.rng <- seq(min(d$groupsize), max(d$groupsize), len=1000)
mu.ci.wg <- sapply(groupsize.rng, function(x){
  HPDI(post$alpha + post$b.g*x)})

plot(weight~groupsize, data=d, col=col.alpha('darkgray', 0.8))
abline(reg=wg.mle)
lines(mu.ci.wg['lower',]~groupsize.rng, data=d, lty=2)
lines(mu.ci.wg['upper',]~groupsize.rng, data=d, lty=2)
precis(wg.mle)
@ 

Neither group size  nor area of territory are great predictors of body weight. 
Area seems weakly positive on weight, while group size seems weakly negative. 


\subsection*{Problem 2}
\label{problem2}

Now, modelling body weight as a normal random variable based on group size and area of territory
\[
\begin{split}
w_i \sim {\rm Normal} (\mu_i, \sigma)\\
\mu_i  = \alpha + \beta_g g_i + \beta_a a_i
\end{split}
\]

Let $ M_{ga}$ denote this model.

<<weight-groupsize-area,warning=FALSE,cache=TRUE>>=
wga.mle <- mle2(weight~dnorm(mean=alpha + b.g*groupsize  +  b.a*area, sd=sigma), data=d, start=list(alpha=mean(d$weight), b.g=0, b.a=0, sigma=sd(d$weight)))


op <- par(mfrow=c(1,2))
post <-sample.naive.posterior(wga.mle)

## fix area and do groupsize effects
mean.area <- mean(d$area)
groupsize.rng <- seq(min(d$groupsize), max(d$groupsize), len=1000)

mu.ci.wga_g <- sapply(groupsize.rng, function(x){
  HPDI(post$alpha + post$b.g*x + post$b.a*mean.area)})
plot(weight~groupsize, data=d, col=col.alpha('darkgray', 0.8))
curve(coef(wga.mle)['b.g']*x + coef(wga.mle)['alpha'] + coef(wga.mle)['b.a']*mean.area, add=T, from=min(d$groupsize), to = max(d$groupsize))

lines(mu.ci.wga_g['lower',]~groupsize.rng, data=d, lty=2)
lines(mu.ci.wga_g['upper',]~groupsize.rng, data=d, lty=2)

## fix groupsize and do area effects
mean.groupsize <- mean(d$groupsize)
area.rng <- seq(min(d$area), max(d$area), len=1000)

mu.ci.wga_a <- sapply(area.rng, function(x){
  HPDI(post$alpha + post$b.g*mean.groupsize + post$b.a*x)})
plot(weight~area, data=d, col=col.alpha('darkgray', 0.8))
curve(coef(wga.mle)['b.g']*mean.groupsize + coef(wga.mle)['alpha'] + coef(wga.mle)['b.a']*x, add=T, from=min(d$area), to = max(d$area))

lines(mu.ci.wga_a['lower',]~area.rng, data=d, lty=2)
lines(mu.ci.wga_a['upper',]~area.rng, data=d, lty=2)

par(op)

precis(wga.mle)
@ 

Now the estimates both look good with tight CIs around the mean. 
These models provide strong evidence that as group size increases, weight decreases,  while weight increases as area  of territory increases.

\subsection*{Problem 3}
\label{problem3}


Closing the loop \dots 

(1)
Now, modelling body weight as a normal random variable based on group size and average food
\[
\begin{split}
w_i \sim {\rm Normal} (\mu_i, \sigma)\\
\mu_i  = \alpha + \beta_g g_i + \beta_v v_i
\end{split}
\]

Let $M_{gv}$  denote this model.


<<weight-groupsize-avgfood,warning=FALSE,cache=TRUE>>=
wgv.mle <- mle2(weight~dnorm(mean=alpha + b.g*groupsize + b.v*avgfood, sd=sigma), data=d, start=list(alpha=mean(d$weight), b.g=0, b.v=0, sigma=sd(d$weight)))


op <- par(mfrow=c(1,2))
post <-sample.naive.posterior(wgv.mle)


## fix avgfood and do groupsize effects
mean.avgfood <- mean(d$avgfood)
groupsize.rng <- seq(min(d$groupsize), max(d$groupsize), len=1000)

mu.ci.wgv_g <- sapply(groupsize.rng, function(x){
  HPDI(post$alpha + post$b.g*x + post$b.v*mean.avgfood)})
plot(weight~groupsize, data=d, col=col.alpha('darkgray', 0.8))
curve(coef(wgv.mle)['b.g']*x + coef(wgv.mle)['alpha'] + coef(wgv.mle)['b.v']*mean.avgfood, add=T, from=min(d$groupsize), to = max(d$groupsize))

lines(mu.ci.wgv_g['lower',]~groupsize.rng, data=d, lty=2)
lines(mu.ci.wgv_g['upper',]~groupsize.rng, data=d, lty=2)

## fix groupsize and do avgfood effects
mean.groupsize <- mean(d$groupsize)
avgfood.rng <- seq(min(d$avgfood), max(d$avgfood), len=1000)

mu.ci.wgv_v <- sapply(avgfood.rng, function(x){
  HPDI(post$alpha + post$b.g*mean.groupsize + post$b.v*x)})
plot(weight~avgfood, data=d, col=col.alpha('darkgray', 0.8))
curve(coef(wgv.mle)['b.g']*mean.groupsize + coef(wgv.mle)['alpha'] + coef(wgv.mle)['b.v']*x, add=T, from=min(d$avgfood), to = max(d$avgfood))

lines(mu.ci.wgv_v['lower',]~avgfood.rng, data=d, lty=2)
lines(mu.ci.wgv_v['upper',]~avgfood.rng, data=d, lty=2)

par(op)
@ 

The estimates are very good with this model.
Here, average food has replaced area of territory, but otherwise the plots look much the same.


(2)

Now, modelling body weight as a normal random variable based on group size, average food, {\em and} area size
\[
\begin{split}
w_i \sim {\rm Normal} (\mu_i, \sigma)\\
\mu_i  = \alpha + \beta_g g_i + \beta_v v_i + \beta_a a_i
\end{split}
\]

<<weight-groupsize-avgfood-area,warning=FALSE,cache=TRUE>>=
wgva.mle <- mle2(weight~dnorm(mean=alpha + b.g*groupsize + b.v*avgfood+b.a*area, sd=sigma), data=d, start=list(alpha=mean(d$weight), b.g=0, b.v=0, b.a=0, sigma=sd(d$weight)))

op <- par(mfrow=c(1,3))
post <-sample.naive.posterior(wgva.mle)

## fix avgfood and area and do groupsize effects
mean.avgfood <- mean(d$avgfood)
mean.area <- mean(d$area)
groupsize.rng <- seq(min(d$groupsize), max(d$groupsize), len=1000)

mu.ci.wgva_g <- sapply(groupsize.rng, function(x){
  HPDI(post$alpha + post$b.g*x + post$b.v*mean.avgfood + post$b.a*mean.area)})
plot(weight~groupsize, data=d, col=col.alpha('darkgray', 0.8))
curve(coef(wgva.mle)['b.g']*x + coef(wgva.mle)['alpha'] + coef(wgva.mle)['b.a']*mean.area +coef(wgva.mle)['b.v']*mean.avgfood, add=T, from=min(d$groupsize), to = max(d$groupsize))

lines(mu.ci.wgva_g['lower',]~groupsize.rng, data=d, lty=2)
lines(mu.ci.wgva_g['upper',]~groupsize.rng, data=d, lty=2)

## fix groupsize and area and do avgfood effects
mean.groupsize <- mean(d$groupsize)
mean.area <- mean(d$area)
avgfood.rng <- seq(min(d$avgfood), max(d$avgfood), len=1000)

mu.ci.wgva_v<- sapply(avgfood.rng, function(x){
  HPDI(post$alpha + post$b.g*mean.groupsize + post$b.v*x + post$b.a*mean.area)})
plot(weight~avgfood, data=d, col=col.alpha('darkgray', 0.8))
curve(coef(wgva.mle)['b.a']*mean.area + coef(wgva.mle)['b.g']*mean.groupsize + coef(wgva.mle)['alpha'] + coef(wgva.mle)['b.v']*x, add=T, from=min(d$avgfood), to = max(d$avgfood))

lines(mu.ci.wgva_v['lower',]~avgfood.rng, data=d, lty=2)
lines(mu.ci.wgva_v['upper',]~avgfood.rng, data=d, lty=2)


## fix avgfood and groupsize and do area effects
mean.avgfood <- mean(d$avgfood)
mean.groupsize <- mean(d$groupsize)
area.rng <- seq(min(d$area), max(d$area), len=1000)

mu.ci.wgva_a <- sapply(area.rng, function(x){
  HPDI(post$alpha + post$b.g*mean.groupsize + post$b.a*x + post$b.v*mean.avgfood)})
plot(weight~area, data=d, col=col.alpha('darkgray', 0.8))
curve(coef(wgva.mle)['b.v']*mean.avgfood + coef(wgva.mle)['b.g']*mean.groupsize + coef(wgva.mle)['alpha'] + coef(wgva.mle)['b.a']*x, add=T, from=min(d$area), to = max(d$area))

lines(mu.ci.wgva_a['lower',]~area.rng, data=d, lty=2)
lines(mu.ci.wgva_a['upper',]~area.rng, data=d, lty=2)

par(op)

@ 

Comparing the results, we see that the estimated effect of group size in the three-variable model remains similar, if a bit increased. 

The estimated effects of area and average food, however, are muddied. 
Relative to the earlier models, the variance around the mean estimates is inflated. 
The models cannot tell whether these variables have a postive or negative effect on weight. 

<<allmodels,message=FALSE,cache=TRUE>>=
precis(wga.mle) ## weight ~ groupsize + area 
precis(wgv.mle) ## weight ~ groupsize + avgfood
precis(wgva.mle) ## weight ~ groupsize + avgfood + area
@ 




\subsection{(a)}


We'd like to know if {\tt avgfood} or {\tt area}  is a better predictor of body weight.

We know from above that area alone is a poor predictor. 
Due to the strong correlation between area and avgfood, we'd assume it alone is also a bad predictor. 

<<avgfood-alone, message=FALSE,cache=TRUE>>=
precis(lm(weight ~ avgfood, data=d))
@ 

Looks like it is (sorry for cheating with {\tt lm} here but time is tight).

We saw above that $M_{ga}$ and $M_{gv}$ both seem decent: 

<<area-or-avgfood,message=FALSE,cache=TRUE>>=
precis(wga.mle) ## weight ~ groupsize + area 
precis(wgv.mle) ## weight ~ groupsize + avgfood
@ 

To compare the two predictors, we will plot the data versus predicted. 
In each case, we will use the model with {\tt groupsize} to correct for group size. 

<<area-vs-avgfood-resid, message=FALSE,cache=TRUE>>=

op <- par(mfrow=c(1,2))

pred.wga <- coef(wga.mle)["b.g"] * d$groupsize + coef(wga.mle)["alpha"]+ coef(wga.mle)["b.a"] * d$area
residuals <- pred.wga - d$weight 
plot(residuals ~ pred.wga, xlab="predicted", main="area", col=col.alpha('darkgray', 0.8))

pred.wgv <- coef(wgv.mle)["b.g"] * d$groupsize + coef(wgv.mle)["alpha"] + coef(wgv.mle)["b.v"] * d$avgfood
residuals <- pred.wgv - d$weight
plot(residuals~pred.wgv, xlab="predicted", main="avgfood", col=col.alpha('darkgray', 0.8))

par(op)

@ 

Plots of the residuasl versus predicted show that the {\tt area} model  $M_{ga}$ behaves slightly less well. 
The variance appears to decrease with higher fitted values (though this could be a sampling effect as there only a few points at the higest predicted value.

Computing $R^2$, the model with {\tt avgfood}, $M_{gv}$, has a {\em very slight} edge

<<area-v-avg, message=FALSE,cache=TRUE>>=
cor(d$weight,pred.wga)^2  ## weight ~ groupsize + area 
cor(d$weight,pred.wgv)^2 ## weight ~ groupsize + avgfood
@ 

On the whole, the models have almost identical goodness of fit, but the slight weirdness in the residuals leads me to favor $M_{gv}$. 
Average food in the home range is a better predictor of weight than area of the range.

This aligns with our mechanistic expectation that food = weight. Area just happens to perform alright as it's strongly correlated with average food. 
I remain unsure about why the residuals of the area model are strange. 


\subsection{(b)}

The predictors average food and area are strongly correlated, as we saw early on with correlation 0.88. 
Further, these two variables have the same direction of effect on weight. 
Thus, when both are included in a model, there is a problem with identifiability on the coefficients $\beta_{area}$ and $\beta_{avgfood}$: different combinations of values of these coefficients give the same result.
Because of this, inclusion of both results in inflated variance in predictions and predicted means.

On the other hand, both of these variables are also correlated with group size. The correlation between groupsize is especially strong (0.90). 
In this case, however, the effect of group size and both of area and average food are opposite. 
Thus, including both unmasks influences rather than leading to identifiability issues. 




\subsection*{Colophon}

<<runit,eval=FALSE>>=
require(knitr) ### the package
knit(paste(getwd(),'hw4ashander.Rnw',sep='/')) ## to run
@ 


\end{document}
